
Project1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000050e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  0000050e  000005a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000064  00800062  00800062  000005a4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000610  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000efa  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000714  00000000  00000000  000015e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008a7  00000000  00000000  00001cf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000021c  00000000  00000000  000025a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000439  00000000  00000000  000027bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ca  00000000  00000000  00002bf5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000033bf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 33 00 	jmp	0x66	; 0x66 <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 80 00 	jmp	0x100	; 0x100 <__vector_6>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 33 02 	jmp	0x466	; 0x466 <__vector_11>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_13>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	fe 00       	.word	0x00fe	; ????
  56:	ec 00       	.word	0x00ec	; ????
  58:	ee 00       	.word	0x00ee	; ????
  5a:	f0 00       	.word	0x00f0	; ????
  5c:	f2 00       	.word	0x00f2	; ????
  5e:	f4 00       	.word	0x00f4	; ????
  60:	f6 00       	.word	0x00f6	; ????
  62:	f8 00       	.word	0x00f8	; ????
  64:	fa 00       	.word	0x00fa	; ????

00000066 <__ctors_end>:
  66:	11 24       	eor	r1, r1
  68:	1f be       	out	0x3f, r1	; 63
  6a:	cf e5       	ldi	r28, 0x5F	; 95
  6c:	d4 e0       	ldi	r29, 0x04	; 4
  6e:	de bf       	out	0x3e, r29	; 62
  70:	cd bf       	out	0x3d, r28	; 61

00000072 <__do_copy_data>:
  72:	10 e0       	ldi	r17, 0x00	; 0
  74:	a0 e6       	ldi	r26, 0x60	; 96
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	ee e0       	ldi	r30, 0x0E	; 14
  7a:	f5 e0       	ldi	r31, 0x05	; 5
  7c:	02 c0       	rjmp	.+4      	; 0x82 <__do_copy_data+0x10>
  7e:	05 90       	lpm	r0, Z+
  80:	0d 92       	st	X+, r0
  82:	a2 36       	cpi	r26, 0x62	; 98
  84:	b1 07       	cpc	r27, r17
  86:	d9 f7       	brne	.-10     	; 0x7e <__do_copy_data+0xc>

00000088 <__do_clear_bss>:
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	a2 e6       	ldi	r26, 0x62	; 98
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a6 3c       	cpi	r26, 0xC6	; 198
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 6d 02 	call	0x4da	; 0x4da <main>
  9c:	0c 94 85 02 	jmp	0x50a	; 0x50a <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <__vector_13>:
		uint8_t addr = (i << 3) + j - 1 ;
		c = Table[addr] ;
	}
	
	return c ;
}
  a4:	1f 92       	push	r1
  a6:	0f 92       	push	r0
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	0f 92       	push	r0
  ac:	11 24       	eor	r1, r1
  ae:	8f 93       	push	r24
  b0:	9f 93       	push	r25
  b2:	ef 93       	push	r30
  b4:	ff 93       	push	r31
  b6:	5d 9b       	sbis	0x0b, 5	; 11
  b8:	1a c0       	rjmp	.+52     	; 0xee <__vector_13+0x4a>
  ba:	e0 91 65 00 	lds	r30, 0x0065	; 0x800065 <TxreadPos>
  be:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <TxwritePos>
  c2:	e8 17       	cp	r30, r24
  c4:	50 f4       	brcc	.+20     	; 0xda <__vector_13+0x36>
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	ea 55       	subi	r30, 0x5A	; 90
  ca:	ff 4f       	sbci	r31, 0xFF	; 255
  cc:	80 81       	ld	r24, Z
  ce:	8c b9       	out	0x0c, r24	; 12
  d0:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <TxreadPos>
  d4:	8f 5f       	subi	r24, 0xFF	; 255
  d6:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <TxreadPos>
  da:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <TxreadPos>
  de:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <TxwritePos>
  e2:	98 13       	cpse	r25, r24
  e4:	04 c0       	rjmp	.+8      	; 0xee <__vector_13+0x4a>
  e6:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <TxreadPos>
  ea:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <TxwritePos>
  ee:	ff 91       	pop	r31
  f0:	ef 91       	pop	r30
  f2:	9f 91       	pop	r25
  f4:	8f 91       	pop	r24
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <__vector_6>:
 100:	1f 92       	push	r1
 102:	0f 92       	push	r0
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	0f 92       	push	r0
 108:	11 24       	eor	r1, r1
 10a:	8f 93       	push	r24
 10c:	9f 93       	push	r25
 10e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 112:	8f 5f       	subi	r24, 0xFF	; 255
 114:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_end>
 118:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__data_start>
 11c:	89 17       	cp	r24, r25
 11e:	30 f0       	brcs	.+12     	; 0x12c <__vector_6+0x2c>
 120:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
 124:	98 b3       	in	r25, 0x18	; 24
 126:	80 e2       	ldi	r24, 0x20	; 32
 128:	89 27       	eor	r24, r25
 12a:	88 bb       	out	0x18, r24	; 24
 12c:	9f 91       	pop	r25
 12e:	8f 91       	pop	r24
 130:	0f 90       	pop	r0
 132:	0f be       	out	0x3f, r0	; 63
 134:	0f 90       	pop	r0
 136:	1f 90       	pop	r1
 138:	18 95       	reti

0000013a <init_Tx>:
 13a:	90 bd       	out	0x20, r25	; 32
 13c:	89 b9       	out	0x09, r24	; 9
 13e:	80 e2       	ldi	r24, 0x20	; 32
 140:	8b b9       	out	0x0b, r24	; 11
 142:	88 e4       	ldi	r24, 0x48	; 72
 144:	8a b9       	out	0x0a, r24	; 10
 146:	86 e8       	ldi	r24, 0x86	; 134
 148:	80 bd       	out	0x20, r24	; 32
 14a:	08 95       	ret

0000014c <init_Rx>:
 14c:	8a b1       	in	r24, 0x0a	; 10
 14e:	80 69       	ori	r24, 0x90	; 144
 150:	8a b9       	out	0x0a, r24	; 10
 152:	08 95       	ret

00000154 <writeByte>:
 154:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <TxwritePos>
 158:	e9 2f       	mov	r30, r25
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	ea 55       	subi	r30, 0x5A	; 90
 15e:	ff 4f       	sbci	r31, 0xFF	; 255
 160:	80 83       	st	Z, r24
 162:	9f 5f       	subi	r25, 0xFF	; 255
 164:	90 31       	cpi	r25, 0x10	; 16
 166:	19 f0       	breq	.+6      	; 0x16e <writeByte+0x1a>
 168:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <TxwritePos>
 16c:	02 c0       	rjmp	.+4      	; 0x172 <writeByte+0x1e>
 16e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <TxwritePos>
 172:	5d 9b       	sbis	0x0b, 5	; 11
 174:	0c c0       	rjmp	.+24     	; 0x18e <writeByte+0x3a>
 176:	e0 91 65 00 	lds	r30, 0x0065	; 0x800065 <TxreadPos>
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	ea 55       	subi	r30, 0x5A	; 90
 17e:	ff 4f       	sbci	r31, 0xFF	; 255
 180:	80 81       	ld	r24, Z
 182:	8c b9       	out	0x0c, r24	; 12
 184:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <TxreadPos>
 188:	8f 5f       	subi	r24, 0xFF	; 255
 18a:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <TxreadPos>
 18e:	08 95       	ret

00000190 <readByte>:
 190:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <RxwritePos>
 194:	91 31       	cpi	r25, 0x11	; 17
 196:	40 f4       	brcc	.+16     	; 0x1a8 <readByte+0x18>
 198:	e9 2f       	mov	r30, r25
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	ea 54       	subi	r30, 0x4A	; 74
 19e:	ff 4f       	sbci	r31, 0xFF	; 255
 1a0:	80 83       	st	Z, r24
 1a2:	9f 5f       	subi	r25, 0xFF	; 255
 1a4:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <RxwritePos>
 1a8:	08 95       	ret

000001aa <timerInit>:
 1aa:	1d bc       	out	0x2d, r1	; 45
 1ac:	1c bc       	out	0x2c, r1	; 44
 1ae:	8e b5       	in	r24, 0x2e	; 46
 1b0:	8c 60       	ori	r24, 0x0C	; 12
 1b2:	8e bd       	out	0x2e, r24	; 46
 1b4:	82 e1       	ldi	r24, 0x12	; 18
 1b6:	9a e7       	ldi	r25, 0x7A	; 122
 1b8:	9b bd       	out	0x2b, r25	; 43
 1ba:	8a bd       	out	0x2a, r24	; 42
 1bc:	89 b7       	in	r24, 0x39	; 57
 1be:	80 61       	ori	r24, 0x10	; 16
 1c0:	89 bf       	out	0x39, r24	; 57
 1c2:	08 95       	ret

000001c4 <asciiToInteger>:
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	fc 01       	movw	r30, r24
 1c8:	f0 97       	sbiw	r30, 0x30	; 48
 1ca:	e9 30       	cpi	r30, 0x09	; 9
 1cc:	f1 05       	cpc	r31, r1
 1ce:	a0 f4       	brcc	.+40     	; 0x1f8 <asciiToInteger+0x34>
 1d0:	e6 5d       	subi	r30, 0xD6	; 214
 1d2:	ff 4f       	sbci	r31, 0xFF	; 255
 1d4:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__tablejump2__>
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	08 95       	ret
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	08 95       	ret
 1e0:	83 e0       	ldi	r24, 0x03	; 3
 1e2:	08 95       	ret
 1e4:	84 e0       	ldi	r24, 0x04	; 4
 1e6:	08 95       	ret
 1e8:	85 e0       	ldi	r24, 0x05	; 5
 1ea:	08 95       	ret
 1ec:	86 e0       	ldi	r24, 0x06	; 6
 1ee:	08 95       	ret
 1f0:	87 e0       	ldi	r24, 0x07	; 7
 1f2:	08 95       	ret
 1f4:	88 e0       	ldi	r24, 0x08	; 8
 1f6:	08 95       	ret
 1f8:	89 e0       	ldi	r24, 0x09	; 9
 1fa:	08 95       	ret
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	08 95       	ret

00000200 <updateRxBuffer>:
 200:	e0 91 63 00 	lds	r30, 0x0063	; 0x800063 <RxwritePos>
 204:	8e 2f       	mov	r24, r30
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	80 31       	cpi	r24, 0x10	; 16
 20a:	91 05       	cpc	r25, r1
 20c:	4c f4       	brge	.+18     	; 0x220 <updateRxBuffer+0x20>
 20e:	fc 01       	movw	r30, r24
 210:	ea 54       	subi	r30, 0x4A	; 74
 212:	ff 4f       	sbci	r31, 0xFF	; 255
 214:	86 ec       	ldi	r24, 0xC6	; 198
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	11 92       	st	Z+, r1
 21a:	e8 17       	cp	r30, r24
 21c:	f9 07       	cpc	r31, r25
 21e:	e1 f7       	brne	.-8      	; 0x218 <updateRxBuffer+0x18>
 220:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <RxwritePos>
 224:	08 95       	ret

00000226 <MyMove>:
 226:	8d e4       	ldi	r24, 0x4D	; 77
 228:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 22c:	8d e4       	ldi	r24, 0x4D	; 77
 22e:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 232:	80 e2       	ldi	r24, 0x20	; 32
 234:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 238:	82 e4       	ldi	r24, 0x42	; 66
 23a:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 23e:	85 e3       	ldi	r24, 0x35	; 53
 240:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 244:	8d e0       	ldi	r24, 0x0D	; 13
 246:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 24a:	08 95       	ret

0000024c <MyPass>:
 24c:	8d e4       	ldi	r24, 0x4D	; 77
 24e:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 252:	80 e5       	ldi	r24, 0x50	; 80
 254:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 258:	8d e0       	ldi	r24, 0x0D	; 13
 25a:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 25e:	08 95       	ret

00000260 <Tie>:
 260:	c2 98       	cbi	0x18, 2	; 24
 262:	84 e5       	ldi	r24, 0x54	; 84
 264:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 268:	85 e4       	ldi	r24, 0x45	; 69
 26a:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 26e:	8d e0       	ldi	r24, 0x0D	; 13
 270:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 274:	08 95       	ret

00000276 <examineInstr>:
 276:	cf 93       	push	r28
 278:	df 93       	push	r29
 27a:	ec 01       	movw	r28, r24
 27c:	fc 01       	movw	r30, r24
 27e:	01 90       	ld	r0, Z+
 280:	00 20       	and	r0, r0
 282:	e9 f7       	brne	.-6      	; 0x27e <examineInstr+0x8>
 284:	31 97       	sbiw	r30, 0x01	; 1
 286:	e8 1b       	sub	r30, r24
 288:	f9 0b       	sbc	r31, r25
 28a:	e2 30       	cpi	r30, 0x02	; 2
 28c:	f1 05       	cpc	r31, r1
 28e:	91 f4       	brne	.+36     	; 0x2b4 <examineInstr+0x3e>
 290:	88 81       	ld	r24, Y
 292:	81 34       	cpi	r24, 0x41	; 65
 294:	09 f0       	breq	.+2      	; 0x298 <examineInstr+0x22>
 296:	52 c0       	rjmp	.+164    	; 0x33c <examineInstr+0xc6>
 298:	89 81       	ldd	r24, Y+1	; 0x01
 29a:	84 35       	cpi	r24, 0x54	; 84
 29c:	09 f0       	breq	.+2      	; 0x2a0 <examineInstr+0x2a>
 29e:	d6 c0       	rjmp	.+428    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 2a0:	8f e4       	ldi	r24, 0x4F	; 79
 2a2:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 2a6:	8b e4       	ldi	r24, 0x4B	; 75
 2a8:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 2ac:	8d e0       	ldi	r24, 0x0D	; 13
 2ae:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 2b2:	d6 c0       	rjmp	.+428    	; 0x460 <__stack+0x1>
 2b4:	e3 30       	cpi	r30, 0x03	; 3
 2b6:	f1 05       	cpc	r31, r1
 2b8:	b1 f4       	brne	.+44     	; 0x2e6 <examineInstr+0x70>
 2ba:	88 81       	ld	r24, Y
 2bc:	82 35       	cpi	r24, 0x52	; 82
 2be:	09 f0       	breq	.+2      	; 0x2c2 <examineInstr+0x4c>
 2c0:	c2 c0       	rjmp	.+388    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 2c2:	89 81       	ldd	r24, Y+1	; 0x01
 2c4:	83 35       	cpi	r24, 0x53	; 83
 2c6:	09 f0       	breq	.+2      	; 0x2ca <examineInstr+0x54>
 2c8:	be c0       	rjmp	.+380    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 2ca:	8a 81       	ldd	r24, Y+2	; 0x02
 2cc:	84 35       	cpi	r24, 0x54	; 84
 2ce:	09 f0       	breq	.+2      	; 0x2d2 <examineInstr+0x5c>
 2d0:	ba c0       	rjmp	.+372    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 2d2:	8f e4       	ldi	r24, 0x4F	; 79
 2d4:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 2d8:	8b e4       	ldi	r24, 0x4B	; 75
 2da:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 2de:	8d e0       	ldi	r24, 0x0D	; 13
 2e0:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 2e4:	bd c0       	rjmp	.+378    	; 0x460 <__stack+0x1>
 2e6:	e4 30       	cpi	r30, 0x04	; 4
 2e8:	f1 05       	cpc	r31, r1
 2ea:	09 f0       	breq	.+2      	; 0x2ee <examineInstr+0x78>
 2ec:	6c c0       	rjmp	.+216    	; 0x3c6 <examineInstr+0x150>
 2ee:	88 81       	ld	r24, Y
 2f0:	83 35       	cpi	r24, 0x53	; 83
 2f2:	09 f0       	breq	.+2      	; 0x2f6 <examineInstr+0x80>
 2f4:	a8 c0       	rjmp	.+336    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 2f6:	89 81       	ldd	r24, Y+1	; 0x01
 2f8:	80 35       	cpi	r24, 0x50	; 80
 2fa:	09 f0       	breq	.+2      	; 0x2fe <examineInstr+0x88>
 2fc:	a9 c0       	rjmp	.+338    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 2fe:	8a 81       	ldd	r24, Y+2	; 0x02
 300:	80 32       	cpi	r24, 0x20	; 32
 302:	09 f0       	breq	.+2      	; 0x306 <examineInstr+0x90>
 304:	a5 c0       	rjmp	.+330    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 306:	8b 81       	ldd	r24, Y+3	; 0x03
 308:	82 34       	cpi	r24, 0x42	; 66
 30a:	21 f0       	breq	.+8      	; 0x314 <examineInstr+0x9e>
 30c:	87 35       	cpi	r24, 0x57	; 87
 30e:	09 f0       	breq	.+2      	; 0x312 <examineInstr+0x9c>
 310:	9f c0       	rjmp	.+318    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 312:	0a c0       	rjmp	.+20     	; 0x328 <examineInstr+0xb2>
 314:	8f e4       	ldi	r24, 0x4F	; 79
 316:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 31a:	8b e4       	ldi	r24, 0x4B	; 75
 31c:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 320:	8d e0       	ldi	r24, 0x0D	; 13
 322:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 326:	9c c0       	rjmp	.+312    	; 0x460 <__stack+0x1>
 328:	8f e4       	ldi	r24, 0x4F	; 79
 32a:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 32e:	8b e4       	ldi	r24, 0x4B	; 75
 330:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 334:	8d e0       	ldi	r24, 0x0D	; 13
 336:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 33a:	92 c0       	rjmp	.+292    	; 0x460 <__stack+0x1>
 33c:	88 81       	ld	r24, Y
 33e:	8e 34       	cpi	r24, 0x4E	; 78
 340:	69 f4       	brne	.+26     	; 0x35c <examineInstr+0xe6>
 342:	89 81       	ldd	r24, Y+1	; 0x01
 344:	87 34       	cpi	r24, 0x47	; 71
 346:	81 f5       	brne	.+96     	; 0x3a8 <examineInstr+0x132>
 348:	8f e4       	ldi	r24, 0x4F	; 79
 34a:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 34e:	8b e4       	ldi	r24, 0x4B	; 75
 350:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 354:	8d e0       	ldi	r24, 0x0D	; 13
 356:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 35a:	82 c0       	rjmp	.+260    	; 0x460 <__stack+0x1>
 35c:	85 34       	cpi	r24, 0x45	; 69
 35e:	21 f5       	brne	.+72     	; 0x3a8 <examineInstr+0x132>
 360:	89 81       	ldd	r24, Y+1	; 0x01
 362:	87 34       	cpi	r24, 0x47	; 71
 364:	09 f0       	breq	.+2      	; 0x368 <examineInstr+0xf2>
 366:	4c c0       	rjmp	.+152    	; 0x400 <__LOCK_REGION_LENGTH__>
 368:	8f e4       	ldi	r24, 0x4F	; 79
 36a:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 36e:	8b e4       	ldi	r24, 0x4B	; 75
 370:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 374:	8d e0       	ldi	r24, 0x0D	; 13
 376:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 37a:	72 c0       	rjmp	.+228    	; 0x460 <__stack+0x1>
 37c:	8a 81       	ldd	r24, Y+2	; 0x02
 37e:	80 32       	cpi	r24, 0x20	; 32
 380:	09 f0       	breq	.+2      	; 0x384 <examineInstr+0x10e>
 382:	61 c0       	rjmp	.+194    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 384:	8b 81       	ldd	r24, Y+3	; 0x03
 386:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <asciiToInteger>
 38a:	81 50       	subi	r24, 0x01	; 1
 38c:	89 30       	cpi	r24, 0x09	; 9
 38e:	08 f0       	brcs	.+2      	; 0x392 <examineInstr+0x11c>
 390:	5a c0       	rjmp	.+180    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 392:	8e b5       	in	r24, 0x2e	; 46
 394:	1e bc       	out	0x2e, r1	; 46
 396:	8b 81       	ldd	r24, Y+3	; 0x03
 398:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <asciiToInteger>
 39c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
 3a0:	8e b5       	in	r24, 0x2e	; 46
 3a2:	8c 60       	ori	r24, 0x0C	; 12
 3a4:	8e bd       	out	0x2e, r24	; 46
 3a6:	5c c0       	rjmp	.+184    	; 0x460 <__stack+0x1>
 3a8:	88 81       	ld	r24, Y
 3aa:	8f 34       	cpi	r24, 0x4F	; 79
 3ac:	49 f5       	brne	.+82     	; 0x400 <__LOCK_REGION_LENGTH__>
 3ae:	89 81       	ldd	r24, Y+1	; 0x01
 3b0:	8b 34       	cpi	r24, 0x4B	; 75
 3b2:	09 f0       	breq	.+2      	; 0x3b6 <examineInstr+0x140>
 3b4:	51 c0       	rjmp	.+162    	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 3b6:	89 b7       	in	r24, 0x39	; 57
 3b8:	84 60       	ori	r24, 0x04	; 4
 3ba:	89 bf       	out	0x39, r24	; 57
 3bc:	0e 94 13 01 	call	0x226	; 0x226 <MyMove>
 3c0:	0e 94 26 01 	call	0x24c	; 0x24c <MyPass>
 3c4:	4d c0       	rjmp	.+154    	; 0x460 <__stack+0x1>
 3c6:	35 97       	sbiw	r30, 0x05	; 5
 3c8:	f1 f5       	brne	.+124    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3ca:	88 81       	ld	r24, Y
 3cc:	8d 34       	cpi	r24, 0x4D	; 77
 3ce:	d9 f5       	brne	.+118    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3d0:	89 81       	ldd	r24, Y+1	; 0x01
 3d2:	86 35       	cpi	r24, 0x56	; 86
 3d4:	c1 f5       	brne	.+112    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3d6:	8a 81       	ldd	r24, Y+2	; 0x02
 3d8:	80 32       	cpi	r24, 0x20	; 32
 3da:	a9 f5       	brne	.+106    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3dc:	8b 81       	ldd	r24, Y+3	; 0x03
 3de:	81 54       	subi	r24, 0x41	; 65
 3e0:	88 30       	cpi	r24, 0x08	; 8
 3e2:	88 f5       	brcc	.+98     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3e4:	8c 81       	ldd	r24, Y+4	; 0x04
 3e6:	81 53       	subi	r24, 0x31	; 49
 3e8:	88 30       	cpi	r24, 0x08	; 8
 3ea:	68 f5       	brcc	.+90     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3ec:	8f e4       	ldi	r24, 0x4F	; 79
 3ee:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 3f2:	8b e4       	ldi	r24, 0x4B	; 75
 3f4:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 3f8:	8d e0       	ldi	r24, 0x0D	; 13
 3fa:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 3fe:	30 c0       	rjmp	.+96     	; 0x460 <__stack+0x1>
 400:	88 81       	ld	r24, Y
 402:	80 35       	cpi	r24, 0x50	; 80
 404:	89 f4       	brne	.+34     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 406:	89 81       	ldd	r24, Y+1	; 0x01
 408:	83 35       	cpi	r24, 0x53	; 83
 40a:	51 f4       	brne	.+20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 40c:	8f e4       	ldi	r24, 0x4F	; 79
 40e:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 412:	8b e4       	ldi	r24, 0x4B	; 75
 414:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 418:	8d e0       	ldi	r24, 0x0D	; 13
 41a:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 41e:	20 c0       	rjmp	.+64     	; 0x460 <__stack+0x1>
 420:	89 81       	ldd	r24, Y+1	; 0x01
 422:	8c 34       	cpi	r24, 0x4C	; 76
 424:	81 f4       	brne	.+32     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 426:	1c c0       	rjmp	.+56     	; 0x460 <__stack+0x1>
 428:	87 35       	cpi	r24, 0x57	; 87
 42a:	69 f4       	brne	.+26     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 42c:	89 81       	ldd	r24, Y+1	; 0x01
 42e:	8e 34       	cpi	r24, 0x4E	; 78
 430:	51 f4       	brne	.+20     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 432:	8f e4       	ldi	r24, 0x4F	; 79
 434:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 438:	8b e4       	ldi	r24, 0x4B	; 75
 43a:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 43e:	8d e0       	ldi	r24, 0x0D	; 13
 440:	0e 94 aa 00 	call	0x154	; 0x154 <writeByte>
 444:	0d c0       	rjmp	.+26     	; 0x460 <__stack+0x1>
 446:	0e 94 30 01 	call	0x260	; 0x260 <Tie>
 44a:	0a c0       	rjmp	.+20     	; 0x460 <__stack+0x1>
 44c:	88 81       	ld	r24, Y
 44e:	86 cf       	rjmp	.-244    	; 0x35c <examineInstr+0xe6>
 450:	89 81       	ldd	r24, Y+1	; 0x01
 452:	84 35       	cpi	r24, 0x54	; 84
 454:	c1 f7       	brne	.-16     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 456:	92 cf       	rjmp	.-220    	; 0x37c <examineInstr+0x106>
 458:	88 81       	ld	r24, Y
 45a:	80 35       	cpi	r24, 0x50	; 80
 45c:	29 f7       	brne	.-54     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 45e:	e0 cf       	rjmp	.-64     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	08 95       	ret

00000466 <__vector_11>:
 466:	1f 92       	push	r1
 468:	0f 92       	push	r0
 46a:	0f b6       	in	r0, 0x3f	; 63
 46c:	0f 92       	push	r0
 46e:	11 24       	eor	r1, r1
 470:	2f 93       	push	r18
 472:	3f 93       	push	r19
 474:	4f 93       	push	r20
 476:	5f 93       	push	r21
 478:	6f 93       	push	r22
 47a:	7f 93       	push	r23
 47c:	8f 93       	push	r24
 47e:	9f 93       	push	r25
 480:	af 93       	push	r26
 482:	bf 93       	push	r27
 484:	ef 93       	push	r30
 486:	ff 93       	push	r31
 488:	8c b1       	in	r24, 0x0c	; 12
 48a:	8d 30       	cpi	r24, 0x0D	; 13
 48c:	19 f0       	breq	.+6      	; 0x494 <__vector_11+0x2e>
 48e:	0e 94 c8 00 	call	0x190	; 0x190 <readByte>
 492:	08 c0       	rjmp	.+16     	; 0x4a4 <__vector_11+0x3e>
 494:	86 eb       	ldi	r24, 0xB6	; 182
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0e 94 00 01 	call	0x200	; 0x200 <updateRxBuffer>
 49c:	86 eb       	ldi	r24, 0xB6	; 182
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 3b 01 	call	0x276	; 0x276 <examineInstr>
 4a4:	ff 91       	pop	r31
 4a6:	ef 91       	pop	r30
 4a8:	bf 91       	pop	r27
 4aa:	af 91       	pop	r26
 4ac:	9f 91       	pop	r25
 4ae:	8f 91       	pop	r24
 4b0:	7f 91       	pop	r23
 4b2:	6f 91       	pop	r22
 4b4:	5f 91       	pop	r21
 4b6:	4f 91       	pop	r20
 4b8:	3f 91       	pop	r19
 4ba:	2f 91       	pop	r18
 4bc:	0f 90       	pop	r0
 4be:	0f be       	out	0x3f, r0	; 63
 4c0:	0f 90       	pop	r0
 4c2:	1f 90       	pop	r1
 4c4:	18 95       	reti

000004c6 <initMemory>:

void initMemory(void)												/* '-' represents empty ceil */
{
 4c6:	e6 e6       	ldi	r30, 0x66	; 102
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	26 ea       	ldi	r18, 0xA6	; 166
 4cc:	30 e0       	ldi	r19, 0x00	; 0
	for(uint8_t i = 0; i < BOARDSIZE ; i++)							/* 'B' black token */
	{
		Table[i] = '-' ;											/* 'W' white token */
 4ce:	8d e2       	ldi	r24, 0x2D	; 45
 4d0:	81 93       	st	Z+, r24
	return c ;
}

void initMemory(void)												/* '-' represents empty ceil */
{
	for(uint8_t i = 0; i < BOARDSIZE ; i++)							/* 'B' black token */
 4d2:	e2 17       	cp	r30, r18
 4d4:	f3 07       	cpc	r31, r19
 4d6:	e1 f7       	brne	.-8      	; 0x4d0 <initMemory+0xa>
	{
		Table[i] = '-' ;											/* 'W' white token */
	}
}
 4d8:	08 95       	ret

000004da <main>:


int main(void)
{
    /* Replace with your application code */
	initMemory() ;
 4da:	0e 94 63 02 	call	0x4c6	; 0x4c6 <initMemory>
	init_Tx(UBBRVALUE) ;
 4de:	83 e3       	ldi	r24, 0x33	; 51
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	0e 94 9d 00 	call	0x13a	; 0x13a <init_Tx>
	init_Rx() ;
 4e6:	0e 94 a6 00 	call	0x14c	; 0x14c <init_Rx>
	DDRB |= (1 << DDB0) | (1 << DDB1) | (1 << DDB2) | (1 << DDB3) | (1 << DDB5) ;
 4ea:	87 b3       	in	r24, 0x17	; 23
 4ec:	8f 62       	ori	r24, 0x2F	; 47
 4ee:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1 << PB0) | (1 << PB1) | (1 << PB2) | (1 << PB3) | (1 << PB5) ;
 4f0:	88 b3       	in	r24, 0x18	; 24
 4f2:	8f 62       	ori	r24, 0x2F	; 47
 4f4:	88 bb       	out	0x18, r24	; 24
	timerInit() ;
 4f6:	0e 94 d5 00 	call	0x1aa	; 0x1aa <timerInit>
	sei() ;
 4fa:	78 94       	sei
 4fc:	ff cf       	rjmp	.-2      	; 0x4fc <main+0x22>

000004fe <__tablejump2__>:
 4fe:	ee 0f       	add	r30, r30
 500:	ff 1f       	adc	r31, r31
 502:	05 90       	lpm	r0, Z+
 504:	f4 91       	lpm	r31, Z
 506:	e0 2d       	mov	r30, r0
 508:	09 94       	ijmp

0000050a <_exit>:
 50a:	f8 94       	cli

0000050c <__stop_program>:
 50c:	ff cf       	rjmp	.-2      	; 0x50c <__stop_program>
